@model Web.Models.UserModel

@{
    ViewBag.Title = "Edit User";
}

<h2>Edit User</h2>


@using (Html.BeginForm("EditUser", "User", FormMethod.Post))
{
    //@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <h3 style="color:red;">@ViewBag.RoleExistMessage</h3>
    <h3 style="color:red;">@ViewBag.EmailExistMessage</h3>
    <h3 style="color:red;">
        @ViewBag.HospitalValidation
    </h3>
    @Html.HiddenFor(model => model.USR_Id)
    @Html.HiddenFor(model => model.USR_OKTAID)

    <div class="form-group">
        @Html.LabelFor(model => model.USR_FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.USR_FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.USR_FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.USR_LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.USR_LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.USR_LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.USR_Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.USR_Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.USR_Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.USR_Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.USR_Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.USR_Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.USR_OrganizationName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.USR_OrganizationName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.USR_OrganizationName, "", new { @class = "text-danger" })
            <h3 style="color:red;">@ViewBag.EmailExistMessage</h3>
        </div>
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
            <a class="popup btn btn-primary" onclick="location.href='@Url.Action("GetUsers", "User")'">Back to UsersList</a>


        </div>
    </div>
</div>

}


<link href="~/Content/jquery-ui.css"
      rel="stylesheet"
      type="text/css" />
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $("#USR_OrganizationName").autocomplete({
            source: function (request, response) {
                $.ajax({
                     url: '@Url.Action("Hospitals", "User")',
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term, OnlyUserHospitals : 0 },
                    success: function (data) {
                        //debugger;
                        response($.map(data, function (item) {
                            return { label: item.HospitalName, value: item.HospitalName };
                        }))
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>