@model Web.Models.UserRoleModel
@using PagedList.Mvc;
@using System.Web.Mvc.Ajax;

@{
    ViewBag.Title = "User Roles";
}
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<h2>User Roles</h2>


<p style="font-size:110%;">
    @using (Html.BeginForm("Create", "Userroles", FormMethod.Post))
    {
        @Html.HiddenFor(model => model.UserRole.UserID)
        if (Model.UserRole.UserID != 0)
        {
            <div class="form-horizontal">
                <h4>Assign New Role</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <h3 style="color:red;">@ViewBag.RoleExistMessage</h3>
                <div class="form-group">
                    @Html.LabelFor(model => model.UserRole.Users, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.DropDownListFor(modelItem => modelItem.UserRole.UserID, new SelectList(Model.UserRole.Users, "USR_Id", "USR_UserName", Model.UserRole.UserID), new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserRole.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UserRole.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.UserRole.RoleID, new SelectList(Model.UserRole.Roles, "Id", "Name", 0), new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserRole.Roles, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        <button class="btn btn-default" onclick="location.href='@Url.Action("GetUsers", "User")';return false;">Back to List</button>
                    </div>
                </div>
            </div>
        }
    }
</p>

<p style="font-size:110%;">
    @*<span style="float:left;">
            <button class="btn btn-primary" onclick="location.href='@Url.Action("Create", "Userroles")';return false;">Create New</button>
        </span>*@
    @using (Html.BeginForm("Index", "UserRoles", FormMethod.Get))
    {
        <span style="float:right;">
            Keyword search ( Role ): @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @style = "display:inline-block;width:225px;" })
            <input type="submit" value="Search" class="btn btn-primary" />
        </span>
    }
</p>
<br /><br />

<table class="table">
    <tr>

        <th>
            @Html.ActionLink("User Name", "Index", new { sortOrder = ViewBag.UserNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Role", "Index", new { sortOrder = ViewBag.RoleSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Organization Name", "Index", new { sortOrder = ViewBag.OrganizationNameSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Delete
        </th>
    </tr>

    @foreach (var item in Model.UserRoles)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RoleName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrganizationName)
            </td>
            <td>
                @if (Model.UserRole.UserID != 0)
                {
                    @Html.ActionLink("Delete", "Delete", "UserRoles", new { id = item.Id, usrId = item.UserID }, new { onclick = "return confirm('Are you sure ?')" })
                }
                else
                {
                    @Html.ActionLink("Delete", "Delete", "UserRoles", new { id = item.Id }, new { onclick = "return confirm('Are you sure ?')" })
                }
                @*<button class="btn btn-default" onclick="location.href='@Url.Action("Delete", "UserRoles", new { id = item.Id, usrId = item.UserID })';return false;">X</button>*@
            </td>

        </tr>
    }

    <tr style="background-color:#f9f9f9;width:100%;">
        <td colspan="3">Page @(Model.UserRoles.PageCount < Model.UserRoles.PageNumber ? 0 : Model.UserRoles.PageNumber) of @Model.UserRoles.PageCount</td>
        <td colspan="5">
            @Html.PagedListPager(Model.UserRoles, page => Url.Action("Index",
new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        </td>
    </tr>


</table>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
