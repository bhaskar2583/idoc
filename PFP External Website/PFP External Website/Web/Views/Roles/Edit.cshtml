@model Web.Models.Roles

@{
    ViewBag.Title = "Edit";
}

<h2>Roles</h2>


@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h4>Edit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <h3 style="color:red;">@ViewBag.RoleExistMessage</h3>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.DropDownListFor(modelItem => modelItem.Active, new[] { new SelectListItem { Text = "Yes", Value = "true" }, new SelectListItem { Text = "No", Value = "false" } })
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UserCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="text-justify" style="padding-top:7px;">
                    @Html.DisplayFor(model => model.UserCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserCount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @Html.HiddenFor(model => model.Current)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-default" onclick="location.href='@Url.Action("Index", "Roles")';return false;">Back to List</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
