@model IEnumerable<IBS.Core.Models.ExceptionCommissionModel>
@{
    ViewBag.Title = "ExceptionCommissions";
}

@using (Html.BeginForm())
{
    <div class="row col-md-12">
        <h2>Commission Exceptions</h2>
        <hr />
    </div>

    <div class="row">

        <div class="col-md-6">
            <div class="form-group">
                <label>Partner</label>
                @Html.DropDownList(
                "ddlCarrier",
                new SelectList(ViewBag.Carriers, "Id", "Name"),
                "-- Please select a partner --", new { @class = "ibs-input ibs-border" }
                )
            </div>
        </div>
        <div class="col-md-6">
            <div class="=form-group">
                <label>Load Date:</label>
                @Html.DropDownList(
                "txtStatementDate",
                new SelectList(ViewBag.carrierStatementDates, "Id", "Name"),
                "-- Please select a statement date --", new { @class = "ibs-input ibs-border" }
                )
            </div>
        </div>



    </div>

    <div class="row">
        <div class="col-md-6">
            <input id="btnSearch" type="button" value="Search" class="btn btn-success" style="margin-top:10px" />
        </div>

    </div>
    <div class="row">
        <div class="col-md-12" style="color:green">
            <div class="form-group">
                @ViewBag.PersistMessage
            </div>
        </div>
    </div>
    <table class="table table-bordered table-hover responsive" id="tblCommisions">
        <thead class="thead-dark lbl-grid-head">
            <tr>
                <th>
                    Client
                </th>
                <th>
                    Policy #
                </th>
                <th>
                    Coverage
                </th>
                <th>
                    Product
                </th>
                <th>
                    Commission
                </th>
                <th>
                    Applied Date
                </th>
                <th>
                    Statement Date
                </th>
                <th>
                    Payment Id
                </th>
                <th></th>
            </tr>
        </thead>
        @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i }))
        {
            <tr class="lbl-grid">
                <td>
                    @Html.HiddenFor(modelItem => item.Data.Id)
                    @Html.HiddenFor(modelItem => item.Data.ClientPolicyId)
                    @Html.HiddenFor(modelItem => item.Data.ClientName)
                    @Html.DisplayFor(modelItem => item.Data.ClientName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.PolicyNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.CoverageType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Data.ProductType)
                </td>
                <td style="width:15%">
                    @Html.TextBoxFor(modelItem => item.Data.CommissionValue, new { id = "CommisionValue" + item.Index, @class = "ibs-input-24height ibs-border" })
                </td>
                <td>
                    @Html.TextBoxFor(modelItem => item.Data.AppliedDateAsString, new { id = "txtAppliedDate" + item.Index, @class = "ibs-input-24height ibs-border" })
                </td>
                <td>

                    @Html.TextBoxFor(modelItem => item.Data.StatementDateAsString, new { id = "txtStatementDate" + item.Index, @class = "ibs-input-24height ibs-border" })
                </td>
                <td>
                    @Html.TextBoxFor(modelItem => item.Data.PaymentId, new { id = "PaymentId" + item.Index, @class = "ibs-input-24height ibs-border" })
                </td>
                <td>
                    @if (item.Data.ClientName == "")
                    {
                        <a id="anchDelete" onclick="assignCommission(@item.Data.Id,@item.Data.PolicyId,@item.Data.PolicyNumber)">Assign Client</a>
                    }

                    @*<a id="anchDelete" onclick="deleteCommission(@item.Data.ClientPolicyId)">Delete</a>*@
                </td>
            </tr>
        }
       
    </table>
    <div class="row">

        <div class="col-md-6">
            <div class="form-group">
                <input id="btnSubmit" type="button" value="Save" class="btn btn-primary" />
            </div>
        </div>

    </div>
    <script type="text/javascript">

        function assignCommission(Id, policyId, policyNo) {
            debugger;
            var host = window.location.origin;
            var apiPath = host + "/Commision/AssignClient";
            var isProd = false;
            if (isProd) {
                host = window.location.origin;
                apiPath = host + "/IBS/Commision/AssignClient";
            }

            var carId = $("#ddlCarrier").val();
            var smDate = $("#txtStatementDate option:selected").text()

            window.location.href = apiPath + "?Id=" + Id + "&policyNumber=" + policyNo + "&policyId=" + policyId + "&carId=" + carId + "&smd=" + smDate;
            //$.ajax({
            //    type: "POST",
            //    url: apiPath + "/AssignClient?Id=" + Id + "&PolicyNo=" + PolicyNo,
            //    contentType: "application/json; charset=utf-8",
            //    dataType: "json",
            //    success: function (data) {
            //        location.reload();
            //    },
            //    error: function (XMLHttpRequest, textStatus, errorThrown) {
            //        console.log(errorThrown);
            //    }
            //});
        }

        $("#btnSearch").click(function () {
            debugger;
            var carrier = $("#ddlCarrier").val();
            if (carrier == "") {
                alert("please select partner");
                return;
            }
            var statementDate = $("#txtStatementDate option:selected").text();
            var paams = window.location.search;

            window.location.href = window.location.origin + window.location.pathname + "?carrierId=" + carrier + "&smd=" + statementDate;
        });
       
        $(document).on('blur', '[id*=CommisionValue]', function () {
            commisionTotal = 0;
            //$("[id*=CommisionValue]").each(function () {
            //    var cTotal = 0;
            //    if ($(this).val() != "") {
            //        var values = $(this).val().split('+');
            //        cTotal = 0;
            //        for (var i = 0; i < values.length; i++) {
            //            cTotal = parseFloat(parseFloat(cTotal).toFixed(2)) + parseFloat(parseFloat(values[i]).toFixed(2));
            //        }
            //        cTotal = parseFloat(cTotal).toFixed(2);
            //    }
            //    cTotal = parseFloat(cTotal).toFixed(2);
            //    if (cTotal != "0.00")
            //        $(this).closest('tr')[0].cells[6].childNodes[1].value = cTotal;
            //});
            $("[id*=CommisionValue]").each(function () {
                if ($(this).val() != "") {
                    var cT = parseFloat($(this).val());
                    commisionTotal = commisionTotal + cT;
                }
            });
            commisionTotal = parseFloat(commisionTotal).toFixed(2);
            $("#tdTotal").text(commisionTotal);
        });
        $(document).ready(function () {
            ////start
            $("#ddlCarrier").change(function () {
                var carrierId = $("#ddlCarrier").val();
                if (carrierId == "") {
                    $("#txtStatementDate").empty();
                    return;
                }
                $("#txtStatementDate").empty();
                var host = window.location.origin;
                var apiPath = host + "/Commision";
                var isProd = false;
                if (isProd) {
                    host = window.location.origin;
                    apiPath = host + "/IBS/Commision";
                }
                $.ajax({
                    type: "POST",
                    url: apiPath + "/ExceptionCarrierStatementDates?carId=" + carrierId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        console.log(data);
                        var smDate = $("#txtStatementDate");
                        $(smDate).empty();
                        $(smDate).append($("<option></option>").val("").html("-- Please select a statement date --"))
                        for (var i = 0; i < data.length; i++) {
                            $(smDate).append($("<option></option>").val(data[i].Id).html(data[i].Name));
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(errorThrown);
                    }
                });
            });
            ////////////////end
           
            var commisionTotal = parseFloat(0);
         
            $("[id*=CommisionValue]").each(function () {
                if ($(this).val() != "") {
                    var cT = parseFloat($(this).val());
                    commisionTotal = commisionTotal + cT;
                }
            });
            commisionTotal = parseFloat(commisionTotal).toFixed(2);
            $('#tblCommisions tr:last').after("<tr><td colspan='3'></td><td style='text-align:right'>Total Commissions</td><td id='tdTotal'>" + commisionTotal + "</td></tr>");
            var query = window.location.search;
            if (query != undefined && query != "") {
                var searchQuery = query.split('&');
                var queryArray = searchQuery[0].split('=');
                if (queryArray[0].indexOf("carrierId") != -1) {
                    if (queryArray[1] != "0") {
                        $("#ddlCarrier").val(queryArray[1]);
                    }
                }

                if (searchQuery.length >= 2) {
                    var smdArray = searchQuery[1].split('=');
                    var smd = smdArray[1];
                    //$("#txtStatementDate option:selected").text(smd);

                    $("#txtStatementDate option").filter(function () {
                        return this.text == smd;
                    }).attr('selected', true);

                    //$("#txtStatementDate").text(smd);
                }
            }
            $("#btnSubmit").click(function () {
                var commisions = [];
                var isInvalidRow = false;
                $('#tblCommisions > tbody  > tr').each(function () {
                    debugger;
                    if ($(this)[0].cells[0].childNodes[1] != undefined) {
                        var Id = $(this)[0].cells[0].childNodes[1].value;
                        var clientPolicyId = $(this)[0].cells[0].childNodes[3].value;
                        var clinetName = $(this)[0].cells[0].childNodes[5].value;
                        var commissionValue = $(this)[0].cells[4].childNodes[1].value;
                        var appliedDate = $(this)[0].cells[5].childNodes[1].value;
                        var statementDate = $(this)[0].cells[6].childNodes[1].value;
                        var paymentId = $(this)[0].cells[7].childNodes[1].value;
                        if (commissionValue != '' && commissionValue != '0' && commissionValue != '0.00'
                            && appliedDate != ''
                            && statementDate != ''
                            && paymentId != '') {

                            var appDate = appliedDate.split('/');
                            appliedDate = appDate[0] + "/01/" + appDate[1];

                            var commision = {
                                "ClientPolicyId": clientPolicyId,
                                "CommissionValue": commissionValue,
                                "ClientName": clinetName,
                                "Id": Id,
                                "AppliedDate": appliedDate,
                                "StatementDate": statementDate,
                                "PaymentId": paymentId,
                            }
                            commisions.push(commision);
                        }
                    }
                    
                });
                var isProd = false;
                let host = window.location.origin;
                let path = window.location.pathname;
                var apiPath = host + path;
                if (isProd) {
                    host = window.location.origin;
                    apiPath = host + "/IBS/Commision";
                }
                $.ajax({
                    type: "POST",
                    url: apiPath,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify(commisions),
                    success: function (commisions) {
                        var carrier = $("#ddlCarrier").val();
                        var smt = $("#txtStatementDate option:selected").text();
                        var pmt = $("#txtPaymentId option:selected").text();

                        var type = 1;
                        var query = window.location.search;
                        if (query != undefined && query != "") {
                            var searchQuery = query.split('&');
                            var queryArray = searchQuery[0].split('=');
                            if (queryArray[0].indexOf("type") != -1) {
                                if (queryArray[1] == "2") {
                                    type = 2;
                                }
                            }
                        }

                        window.location.href = window.location.origin + window.location.pathname + "?carrierId=" + carrier + "&smd=" + smt;
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(errorThrown);
                    }
                });
            });
        });
    </script>
}