@model IEnumerable<IBS.Core.Models.CommisionModel>

@{
    ViewBag.Title = "Index";
}
@using (Html.BeginForm())
{
    <div class="row col-md-12">
        <h2>
            Edit Commisions
        </h2>
        <hr />
    </div>

    <div class="row">

        <div class="col-md-6">
            <div class="form-group">
                <label>Carrier</label>
                @Html.DropDownList(
                "ddlCarrier",
                new SelectList(ViewBag.Carriers, "Id", "Name"),
                "-- Please select a carrier --", new { @class = "ibs-input ibs-border" }
                )
            </div>
        </div>

    </div>


    <div class="row">

        <div class="col-md-6">
            <div class="form-group">
                <label>Statement Date:</label>
                <input type="text" id="txtStatementDate" class="ibs-input ibs-border" />
            </div>
        </div>

    </div>
    <div class="row">

        <div class="col-md-6">
            <div class="form-group">
                <label>payment id:</label>
                <input type="text" id="txtPaymentId" class="ibs-input ibs-border" />
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-6">
            <input id="btnSearch" type="button" value="Search" class="btn btn-success" style="margin-top:10px" />
        </div>

    </div>

    <div class="row">
        <div class="col-md-12" style="color:green">
            <div class="form-group">
                @ViewBag.PersistMessage
            </div>
        </div>
    </div>
    <table class="table" id="tblCommisions">
        <thead class="thead-dark lbl-grid-head">
            <tr>
                <th>
                    Client
                </th>
                <th style="display:none">
                    Department
                </th>
                <th>
                    Policy #
                </th>
                <th>
                    Coverage
                </th>
                <th>
                    Product
                </th>
                <th>
                    Statement Date
                </th>
                <th>
                    Payment Id
                </th>
                <th>
                    Commission
                </th>
                <th>
                    Applied Date
                </th>
                <th style="display:none">
                    Payment Id
                </th>


            </tr>
        </thead>
        @foreach (var item in Model.Select((x, i) => new { Data = x, Index = i }))
        {

        <tr class="lbl-grid">
            <td>
                @Html.HiddenFor(modelItem => item.Data.ClientId)
                @Html.HiddenFor(modelItem => item.Data.PolicyId)
                @Html.HiddenFor(modelItem => item.Data.CoverageId)
                @Html.HiddenFor(modelItem => item.Data.ClientPolicyId)
                @Html.DisplayFor(modelItem => item.Data.CleintName)
                @Html.HiddenFor(modelItem => item.Data.StatementDate)
                @Html.HiddenFor(modelItem => item.Data.CarrierId)
                @Html.HiddenFor(modelItem => item.Data.Status)
                @Html.HiddenFor(modelItem => item.Data.PolicyNumber)
                @Html.HiddenFor(modelItem => item.Data.SelectedCoverage.Id)

                @Html.HiddenFor(modelItem => item.Data.Coverages.Count)
                @Html.HiddenFor(modelItem => item.Data.SelectedProduct.Id)
            </td>
          
            <td>
                @Html.DisplayFor(modelItem => item.Data.PolicyNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Data.CoverageName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Data.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Data.StatementDateAsString)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Data.PaymentId)
            </td>

            <td style="width:15%">
                @Html.TextBoxFor(modelItem => item.Data.CommisionValue, new { id = "CommisionValue" + item.Index, @class = "ibs-input-24height ibs-border" })
            </td>
            <td>
                @Html.TextBoxFor(modelItem => item.Data.AppliedDateAsString, new { id = "txtAppliedDate" + item.Index, @class = "ibs-input-24height ibs-border datepickercss" })
            </td>
            <td style="display:none">
                @Html.TextBoxFor(modelItem => item.Data.PaymentId, new { id = "PaymentId" + item.Index, @class = "ibs-input-24height ibs-border" })
            </td>

        </tr>
        }
    </table>
    <div class="row">

        <div class="col-md-6">
            <div class="form-group">
                <input id="btnSubmit" type="button" value="Save" class="btn btn-primary" />
            </div>
        </div>

    </div>
    <script type="text/javascript">
        $(function () {
            $("#txtStatementDate").datepicker();
            $(".datepickercss").datepicker();
        });

        $("#btnSearch").click(function () {
            var carrier = $("#ddlCarrier").val();
            if (carrier == "") {
                alert("please select carrier");
                return;
            }
            var statementDate = $("#txtStatementDate").val();
            var paymentId = $("#txtPaymentId").val();
            window.location.href = window.location.origin + window.location.pathname + "?carrierId=" + carrier + "&smd=" + statementDate + "&pId=" + paymentId
        });

     
        $(document).ready(function () {

            var query = window.location.search;
            if (query != undefined && query != "") {
                var searchQuery = query.split('&');
                var queryArray = searchQuery[0].split('=');
                if (queryArray[0].indexOf("carrierId") != -1) {
                    if (queryArray[1] != "0") {
                        $("#ddlCarrier").val(queryArray[1]);
                    }

                }

                var smt = searchQuery[1];
                if (smt.indexOf("smd") != -1) {
                    var d = smt.split('=');
                    if (d != "" && d!="0") {
                        $("#txtStatementDate").val(d[1]);
                    }

                }
                var pmt = searchQuery[2];
                if (pmt.indexOf("pId") != -1) {
                    var d = pmt.split('=');
                    if (d != "" && d != "0") {
                        $("#txtPaymentId").val(d[1]);
                    }

                }
            }

            $("#btnSubmit").click(function () {
                var commisions = [];
                var isInvalidRow = false;
                $('#tblCommisions > tbody  > tr').each(function () {
                    var clientId = $(this)[0].cells[0].childNodes[1].value;
                    var policyid = $(this)[0].cells[0].childNodes[3].value;
                    //var coverageId = $(this)[0].cells[0].childNodes[5].value;
                    var clientPolicyId = $(this)[0].cells[0].childNodes[7].value;
                    var carrierId = $(this)[0].cells[0].childNodes[11].value;
                    var ststus = $(this)[0].cells[0].childNodes[13].value;
                    var policyNo = $(this)[0].cells[0].childNodes[15].value;


                    var coverageId = $(this)[0].cells[3].childNodes[1].value;
                    var status = $(this)[0].cells[4].childNodes[1].value;
                    var commision = $(this)[0].cells[5].childNodes[1].value;
                    var appoliedDate = $(this)[0].cells[6].childNodes[1].value;
                    var paymntId = $(this)[0].cells[7].childNodes[1].value;
                    var statementDate = $("#txtStatementDate").val();

                    if (statementDate == "" || commision == "" || paymntId == "") {
                        isInvalidRow = true;
                    }
                    var commision = {
                        "clientPolicyId": clientPolicyId,
                        "Status": status,
                        "CommisionValue": commision,
                        "AppliedDate": appoliedDate,
                        "PaymentId": paymntId,
                        "StatementDate": statementDate,
                        "CarrierId": carrierId,
                        "PolicyNumber": policyNo,
                        "ClientId": clientId,
                        "CoverageId": coverageId,
                        "ProductId": status
                    }
                    commisions.push(commision);
                });
                if (isInvalidRow) {
                    alert('either of statement date, commission or payment id missied. please check');
                    return;
                }
                let host = window.location.origin;
                let path = window.location.pathname;
                $.ajax({
                    type: "POST",
                    url: host + path,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify(commisions),
                    success: function (commisions) {
                        var carrier = $("#ddlCarrier").val();

                        window.location.href = window.location.origin + window.location.pathname
                            + "?carrierId=" + carrier + "&isSaved=true"
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        console.log(errorThrown);
                    }

                });

            });
        });
    </script>
}
